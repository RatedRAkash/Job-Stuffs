memset(array, value, sizeof(array))
	value can only be 0 or -1 for int array

priority_queue<int, vector<int>, greater<int>> pq;

fill(array, array + size, fillValue)

struct myComp {
    bool operator() (int a, int b) {
        return cost[a] > cost[b];
    }
};

struct myComp {
    constexpr bool operator()( pair<int, long long> const& a, pair<int, long long> const& b) const noexcept {
        return a.second > b.second;
    }
};


* #include<..> just opens the file mentioned in the include and paste all the content
* Pre processor cleans up code(removes new line, comment), includes stuffs from header files, replace defined stuffs etc.
* .o, .obj or object files that contains the machine code(looks like bunch of numbers) of the preprocessed c/cpp file and it is the compiled file. Every c/cpp file will have one object file.
* linker will link all the object files and libraries and generate a executable files.


things left
-----------
comparator, comparator for struct